{"version":3,"sources":["ContextCalendar/CalendarContext.tsx","date.extensions.ts","logics/logics.ts","components/Day/Day.tsx","assets/image/star-green.svg","assets/image/star-gold.svg","assets/image/me-ok.svg","assets/image/me-green-ball.svg","assets/image/me-red-ball.svg","assets/image/me-steps.svg","assets/image/me-emoji-happy.svg","assets/image/me-emoji-neutral.svg","assets/image/me-emoji-sad.svg","components/Popup/Popup.tsx","components/Board/Board.tsx","assets/image/me-plus.svg","assets/image/me-minus.svg","components/Counter/Counter.tsx","components/StatusHealth/StatusHealth.tsx","components/Editor/Editor.tsx","assets/image/me-shot-arrow-left.svg","assets/image/me-shot-arrow-right.svg","components/Months/Months.tsx","assets/image/help.svg","components/HeaderButton/HeaderButton.tsx","components/Header/Header.tsx","assets/image/arrow.svg","assets/image/arrow_shot.svg","components/Help/Help.tsx","components/Modal/Modal.tsx","components/Calendar/Calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MonthNames","WeekDays","initialState","redCounts","greenCounts","stepCounts","amountGreenStar","amountGoldStar","CalendarContext","React","createContext","currentMonthYear","Date","getMonth","getFullYear","changeMonthYear","console","log","selectedDate","changeSelectedDate","totalState","getDraggedStar","changeGlobalState","getResaultOnDate","getStarOnMonth","setDraggedStar","useCurrentMonthYear","useContext","CalendarContextProvider","children","useState","resaults","setResaults","curMonthYear","setCurMonthYear","toISOString","slice","currentDate","setCurrentDate","draggedStar","Provider","value","m","y","data","prev","d","Object","keys","includes","typeStar","res","filter","i","Number","map","reduce","acc","prototype","addDays","days","this","date","setDate","getDate","isToday","today","isSameDate","isInterval","n","diff","Math","round","getTime","sign","abs","isAnotherMonth","isWeekend","getDay","howGood","g","r","status","isDraggableDay","prefixClass","transformDate","totalResault","floor","setHours","Day","toogleModal","popupDialog","curMonth","classDay","classDate","isEditable","labelDate","className","onClick","ev","curDay","x","board","currentTarget","widthBoard","offsetParent","clientWidth","getClientRects","widthDay","width","xClient","left","yClient","top","offsetLeftBoard","parentElement","offsetLeft","offsetTopBoard","offsetTop","xCandidate","stopPropagation","event","onDragOver","preventDefault","style","backgroundColor","onDragLeave","onDrop","getPossible","possibleGreen","possibleGoldStar","isGetStar","temp","Array","fill","ind","src","me_ok","alt","greenstar","goldstar","weightCounts","Popup","currentPosition","mood","length","greenBall","redBall","steps","happy","sad","neutral","height","marginRight","Board","curYear","currentData","setCurrentData","setDays","useEffect","firstDay","listD","sizeBoard","cell","from","_","push","createBoardMonth","getPopUp","parseInt","day_","setRightValue","minV","maxV","isNaN","Counter","changeValue","minValue","maxValue","increment","showIncrementIcon","changeCounter","getAttribute","minus_ico","type","step","onChange","target","handleInput","plus_ico","StatusHealth","Editor","handleClose","editResault","setEditResault","setPartState","partialData","isActiveButClear","disabled","Months","changeMonth","prevMonth","prevYear","name","arrowLeft","arrowRight","HeaderButton","typeButton","text","isDragable","onclick","classes","help","draggable","onDragStart","Header","Help","arrow_shot","ico_arrow","Modal","isShow","toogleShow","Calendar","showModal","setShowModal","hideModal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7fadbe0.chunk.js","sourcesContent":["import React from \"react\";\nimport { TypeButton } from \"../components/HeaderButton/HeaderButton\";\n\n// * Limit stars on the month\nconst limitGreen: number = 21;\nconst limitGold: number = 7;\n\nexport enum MonthNames {\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n}\nexport enum WeekDays {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n// * Interface for item Global state\nexport interface IResault {\n  redCounts: number;\n  greenCounts: number;\n  stepCounts: number;\n  amountGreenStar: number;\n  amountGoldStar: number;\n}\n// * Interface for Global state\nexport interface IStateResaults {\n  [keyDate: string]: IResault;\n}\n// * Interface for context\ninterface ICalendar {\n  readonly currentMonthYear: [m: number, y: number]; // ? Current month and year\n  changeMonthYear: (m: number, y: number) => void; // ? Set current month and year\n  readonly selectedDate: string; // ? Selected date\n  changeSelectedDate: (d: string) => void; // ? Change selected date\n  readonly getDraggedStar: TypeButton; // ? How star dragg\n  readonly totalState: IStateResaults; // ? Global state\n  changeGlobalState: (data: IStateResaults) => void; // ? Update global State\n  getResaultOnDate: (d: string) => IResault; // ? Get data from global state on selected date\n  getStarOnMonth: (typeStar: \"amountGreenStar\" | \"amountGoldStar\") => number; // ? Get amount green | gold star in selected month\n  setDraggedStar?: (drg: TypeButton) => void; // ? set Dragged star\n}\n\nlet initialState: IStateResaults = {\n  \"2021-02-26\": {\n    redCounts: 3,\n    greenCounts: 7,\n    stepCounts: 1000,\n    amountGreenStar: 0,\n    amountGoldStar: 0,\n  },\n  \"2021-03-04\": {\n    redCounts: 5,\n    greenCounts: 12,\n    stepCounts: 4500,\n    amountGreenStar: 2,\n    amountGoldStar: 0,\n  },\n  \"2021-03-06\": {\n    redCounts: 1,\n    greenCounts: 6,\n    stepCounts: 2000,\n    amountGreenStar: 1,\n    amountGoldStar: 0,\n  },\n  \"2021-03-08\": {\n    redCounts: 5,\n    greenCounts: 14,\n    stepCounts: 8000,\n    amountGreenStar: 0,\n    amountGoldStar: 1,\n  },\n};\n// * Initial Context\nconst CalendarContext = React.createContext<ICalendar>({\n  currentMonthYear: [new Date().getMonth(), new Date().getFullYear()],\n  changeMonthYear: () => console.log(\"void\"),\n  selectedDate: \"\",\n  changeSelectedDate: () => console.log(\"void\"),\n  totalState: initialState,\n  getDraggedStar: \"\",\n  changeGlobalState: (initialState) => console.log(\"void\"),\n  getResaultOnDate: () => ({\n    redCounts: 0,\n    greenCounts: 0,\n    stepCounts: 0,\n    amountGreenStar: 0,\n    amountGoldStar: 0,\n  }),\n  getStarOnMonth: () => 0,\n  setDraggedStar: () => console.log(\"void\"),\n});\n// * Hook for get Context data\nexport const useCurrentMonthYear = () => {\n  return React.useContext(CalendarContext);\n};\n\nexport const CalendarContextProvider: React.FC<React.ReactNode> = ({\n  children,\n}) => {\n  // * Global state\n  const [resaults, setResaults] = React.useState<IStateResaults>(initialState);\n  // * Current month and year\n  const [curMonthYear, setCurMonthYear] = React.useState<[number, number]>([\n    new Date().getMonth(),\n    new Date().getFullYear(),\n  ]);\n  // * Selected date\n  const [currentDate, setCurrentDate] = React.useState<string>(\n    new Date().toISOString().slice(0, 10)\n  );\n  // * Dragged star\n  const [draggedStar, setDraggedStar] = React.useState<TypeButton>(\"\");\n  // * Set current month and year\n  const handlerCurrentMonthYear = (m: number, y: number): void => {\n    setCurMonthYear([m, y]);\n  };\n  // * Set item into Global state\n  const handleItemGlobalState = (data: IStateResaults): void => {\n    setResaults((prev) => ({ ...prev, ...data }));\n    setDraggedStar(\"\")\n  };\n  // * Get item Global state\n  const getResult: (d: string) => IResault = (d: string) => {\n    if (Object.keys(resaults).includes(d)) return resaults[d];\n    return {\n      redCounts: 0,\n      greenCounts: 0,\n      stepCounts: 0,\n      amountGreenStar: 0,\n      amountGoldStar: 0,\n    };\n  };\n  // * Calculate amount stars on current month\n  const getAmountStar: (\n    typeStar: \"amountGreenStar\" | \"amountGoldStar\"\n  ) => number = (typeStar) => {\n    let res = Object.keys(resaults)\n      .filter((i) => Number(i.slice(5, 7)) === curMonthYear[0] + 1)\n      .map((i) => resaults[i])\n      .reduce((acc, i) => acc + i[typeStar], 0);\n    return typeStar === \"amountGreenStar\" ? limitGreen - res : limitGold - res;\n  };\n  return (\n    <CalendarContext.Provider\n      value={{\n        currentMonthYear: curMonthYear,\n        changeMonthYear: handlerCurrentMonthYear,\n        selectedDate: currentDate,\n        changeSelectedDate: setCurrentDate,\n        totalState: resaults,\n        getDraggedStar: draggedStar,\n        changeGlobalState: handleItemGlobalState,\n        getResaultOnDate: getResult,\n        getStarOnMonth: getAmountStar,\n        setDraggedStar: setDraggedStar,\n      }}\n    >\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n","export {};\n\ndeclare global {\n  interface Date {\n    addDays(days: number, useThis?: boolean): Date;\n    isToday(): boolean;\n    // clone(): Date;\n    isAnotherMonth(date: Date): boolean;\n    isWeekend(): boolean;\n    isSameDate(date: Date): boolean;\n    isInterval(date: Date, n: number): boolean;\n    // getStringDate(): String;\n  }\n}\n\nDate.prototype.addDays = function (days: number): Date {\n  if (!days) return this;\n  let date = this;\n  date.setDate(date.getDate() + days);\n\n  return date;\n};\n\nDate.prototype.isToday = function (): boolean {\n  let today = new Date();\n  return this.isSameDate(today);\n};\n\nDate.prototype.isInterval = function (date: Date, n: number): boolean {\n  let curDate = this;\n  let diff: number = Math.round(\n    (curDate.getTime() - date.getTime()) / (1000 * 60 * 60 * 24)\n  );\n  if (diff === 0 || Math.sign(diff) === Math.sign(n)) {\n    if (0 <= Math.abs(diff) && Math.abs(diff) <= Math.abs(n)) return true;\n  }\n  return false;\n};\n// Date.prototype.clone = function (): Date{\n//    return new Date(+this);\n// };\n\nDate.prototype.isAnotherMonth = function (date: Date): boolean {\n  return date && this.getMonth() !== date.getMonth();\n};\n\nDate.prototype.isWeekend = function (): boolean {\n  return this.getDay() === 0 || this.getDay() === 6;\n};\n\nDate.prototype.isSameDate = function (date: Date): boolean {\n  return (\n    date &&\n    this.getFullYear() === date.getFullYear() &&\n    this.getMonth() === date.getMonth() &&\n    this.getDate() === date.getDate()\n  );\n};\n\n// Date.prototype.getStringDate = function (): String {\n//     //Month names in Brazilian Portuguese\n//     let monthNames = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n//     //Month names in English\n//     //let monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n//     let today = new Date();\n//     if (this.getMonth() == today.getMonth() && this.getDay() == today.getDay()) {\n//         return \"Hoje\";\n//         //return \"Today\";\n//     } else if (this.getMonth() == today.getMonth() && this.getDay() == today.getDay() + 1) {\n//         return \"Amanhã\";\n//         //return \"Tomorrow\";\n//     } else if (this.getMonth() == today.getMonth() && this.getDay() == today.getDay() - 1) {\n//         return \"Ontem\";\n//         //return \"Yesterday\";\n//     } else {\n//         return this.getDay() + ' de ' + this.monthNames[this.getMonth()] + ' de ' + this.getFullYear();\n//         //return this.monthNames[this.getMonth()] + ' ' + this.getDay() + ', ' +  this.getFullYear();\n//     }\n// }\n","import { IHealth } from \"../allInterfaces\";\nimport { IResault } from \"../ContextCalendar/CalendarContext\";\n\nexport const howGood = (g: number, r: number): IHealth => {\n  let res: number = 0;\n  if (g === 0 && r === 0) return { status: \"choose\" };\n  try {\n    res = g / r;\n  } catch {\n    return { status: \"choose\" };\n  }\n  if (res > 2) return { status: \"happy\" };\n  else if (res <= 1) return { status: \"sad\" };\n  else return { status: \"neutral\" };\n};\n\nexport const createBoardMonth = (m: number, y: number): Array<Date> => {\n  let firstDay: number = new Date(y, m, 1).getDay();\n  let listD: Date[] = [];\n  const sizeBoard: number =\n    firstDay + new Date(y, m + 1, 0).getDate() > 35 ? 42 : 35;\n  for (let cell in Array.from({ length: sizeBoard }, (_, i) => i)) {\n    listD.push(new Date(y, m, Number(cell) - firstDay + 1, 12, 0, 1, 0));\n  }\n  return listD;\n};\n\nexport const isDraggableDay = (d: Date): boolean => {\n  if (d.isWeekend()) return true;\n  return false;\n  // return true;\n};\n\nexport const isGetStar = (\n  res: IResault\n): { possibleGreen: number; possibleGoldStar: number } => {\n  try {\n    const totalResault: number =\n      Math.floor(res.greenCounts / 2) +\n      Math.floor(res.stepCounts / 1000) -\n      res.redCounts;\n    return {\n      possibleGreen: Math.floor(\n        (totalResault - res.amountGreenStar * 3 - res.amountGoldStar * 9) / 3\n      ),\n      possibleGoldStar: Math.floor(res.amountGreenStar / 3),\n    };\n  } catch {\n    return { possibleGreen: 0, possibleGoldStar: 0 };\n  }\n};\n","import React from \"react\";\nimport \"./day.scss\";\nimport {\n  useCurrentMonthYear,\n  MonthNames,\n  IResault,\n  IStateResaults,\n} from \"../../ContextCalendar/CalendarContext\";\nimport \"../../date.extensions\";\nimport { howGood, isGetStar } from \"../../logics/logics\";\nimport greenstar from \"../../assets/image/star-green.svg\";\nimport goldstar from \"../../assets/image/star-gold.svg\";\nimport me_ok from \"../../assets/image/me-ok.svg\";\nimport { IPopup } from \"../../allInterfaces\";\n\ninterface IDay {\n  date: Date;\n  toogleModal: (m: number) => void;\n  popupDialog?: (data: IPopup) => void;\n  tasks?: {\n    task: string;\n  };\n}\nconst prefixClass: string = \"me-day\";\nenum WeekDays {\n  sun,\n  mon,\n  tue,\n  wed,\n  thu,\n  fri,\n  sat,\n}\n\nconst transformDate = (d: Date): string => {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate() + 1)\n    .toISOString()\n    .slice(0, 10);\n};\n\nconst totalResault = (data: IResault): number => {\n  let res: number = Math.floor(\n    Math.floor(data.greenCounts / 2) +\n      Math.floor(data.stepCounts / 1000) -\n      data.redCounts -\n      data.amountGreenStar * 3 -\n      data.amountGoldStar * 9\n  );\n  return res > 0 ? res : 0;\n};\nconst today: Date = new Date(new Date().setHours(12, 0, 0, 0));\n\nexport const Day: React.FC<IDay> = ({ date, toogleModal, popupDialog }) => {\n  // * Hooks for get current date and data\n  const {\n    currentMonthYear: [curMonth],\n    changeSelectedDate,\n    getResaultOnDate,\n    getDraggedStar,\n    changeGlobalState,\n  } = useCurrentMonthYear();\n  // * Get resaults on this day\n  const res: IResault = getResaultOnDate(transformDate(date));\n  // * Create Class CSS for this day\n  const classDay: string = `${prefixClass} ${WeekDays[date.getDay()]} ${\n    howGood(res.greenCounts, res.redCounts).status\n  }`;\n  // * Craete class for date\n  const classDate: string = `${prefixClass}__date${\n    date.isToday() ? \" today\" : \"\"\n  }${date.getMonth() === curMonth ? \"\" : \" another\"}`;\n  // * Is editable day\n  const isEditable: boolean = date.isInterval(today, -2);\n  // * Show/hide modal\n  const showMd = (): void => {\n    toogleModal(1);\n    changeSelectedDate(transformDate(date));\n  };\n  // * Add name month to 1st day next month\n  const labelDate: string = `${date.getDate()} ${\n    date.getMonth() > curMonth && date.getDate() === 1\n      ? MonthNames[date.getMonth() === 11 ? 0 : date.getMonth()].slice(0, 3)\n      : \"\"\n  }`;\n  // * Change background when drag element above\n  const starOnCard = (ev: React.DragEvent): void => {\n    ev.preventDefault();\n    if (ev.currentTarget.parentElement)\n      ev.currentTarget.parentElement.style.backgroundColor =\n        \"rgba(87, 148, 116, 0.08)\";\n  };\n  // * Back to old background\n  const endOnCard = (ev: React.DragEvent): void => {\n    if (ev.currentTarget.parentElement)\n      ev.currentTarget.parentElement.style.backgroundColor = \"#FFFFFF\";\n  };\n  // * Add star to Global state\n  const setStar = (ev: React.DragEvent): void => {\n    if (ev.currentTarget.parentElement)\n      ev.currentTarget.parentElement.style.backgroundColor = \"#FFFFFF\";\n    const getPossible = isGetStar(res);\n    if (getDraggedStar === \"greenstar\" && getPossible.possibleGreen > 0) {\n      let data: IResault = { ...res, amountGreenStar: res.amountGreenStar + 1 };\n      let temp: IStateResaults = { [transformDate(date)]: data };\n      changeGlobalState(temp);\n      return;\n    }\n    if (getDraggedStar === \"goldstar\" && getPossible.possibleGoldStar > 0) {\n      let data: IResault = {\n        ...res,\n        amountGreenStar: res.amountGreenStar - 3,\n        amountGoldStar: res.amountGoldStar + 1,\n      };\n      let temp: IStateResaults = { [transformDate(date)]: data };\n      changeGlobalState(temp);\n      return;\n    }\n  };\n\n  const handlerHover = (ev: React.MouseEvent): void => {\n    if (popupDialog)\n      popupDialog({\n        curDay: \"\",\n        x: 0,\n        y: 0,\n      });\n    let board = ev.currentTarget as HTMLDivElement;\n    const widthPopup = 285;\n    // ! Need adaptive Y\n    let widthBoard = board.offsetParent?.clientWidth || 0;\n    // let heightBoard = board.offsetParent?.clientHeight || 0;\n    const {\n      width: widthDay,\n      // height: heightDay,\n      left: xClient,\n      top: yClient,\n    } = board.getClientRects()[0];\n    let offsetLeftBoard = board.parentElement?.offsetLeft || 0;\n    let offsetTopBoard = board.parentElement?.offsetTop || 0;\n    let xCandidate = xClient + widthDay + 15 - offsetLeftBoard;\n    if (xCandidate + widthPopup > widthBoard) {\n      xCandidate = xClient - 15 - widthPopup - offsetLeftBoard;\n    }\n    if (popupDialog)\n      popupDialog({\n        curDay: transformDate(date),\n        x: xCandidate,\n        y: yClient - offsetTopBoard,\n      });\n      ev.stopPropagation();\n  };\n  return (\n    <div\n      className={classDay}\n      onClick={handlerHover}\n    >\n      <div className={classDate}>{labelDate}</div>\n      {isEditable && (\n        <div\n          className={`${prefixClass}__update`}\n          onClick={(event: React.MouseEvent) => {\n            event.stopPropagation();\n            showMd();\n          }}\n        >\n          Update\n        </div>\n      )}\n      <div\n        className=\"me-day__body\"\n        onDragOver={starOnCard}\n        onDragLeave={endOnCard}\n        onDrop={setStar}\n      >\n        {res.greenCounts > 0 &&\n          Array(totalResault(res))\n            .fill(\"\")\n            .map((i, ind) => <img src={me_ok} alt=\"!\" key={ind} />)}\n        {res.amountGreenStar > 0 &&\n          Array(res.amountGreenStar)\n            .fill(\"\")\n            .map((i, ind) => <img src={greenstar} alt=\"\" key={ind} />)}\n        {res.amountGoldStar > 0 &&\n          Array(res.amountGoldStar)\n            .fill(\"\")\n            .map((i, ind) => <img src={goldstar} alt=\"\" key={ind} />)}\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/star-green.d4309c7e.svg\";","export default __webpack_public_path__ + \"static/media/star-gold.01734bf5.svg\";","export default __webpack_public_path__ + \"static/media/me-ok.48210cbc.svg\";","export default __webpack_public_path__ + \"static/media/me-green-ball.58120cf5.svg\";","export default __webpack_public_path__ + \"static/media/me-red-ball.3b9177e5.svg\";","export default __webpack_public_path__ + \"static/media/me-steps.bd9538c6.svg\";","export default __webpack_public_path__ + \"static/media/me-emoji-happy.06deaf39.svg\";","export default __webpack_public_path__ + \"static/media/me-emoji-neutral.a5076e4f.svg\";","export default __webpack_public_path__ + \"static/media/me-emoji-sad.9e74c644.svg\";","import React from \"react\";\nimport \"./popup.scss\";\nimport CSS from \"csstype\";\nimport {\n  useCurrentMonthYear,\n  IResault,\n} from \"../../ContextCalendar/CalendarContext\";\nimport { howGood } from \"../../logics/logics\";\nimport { IHealth, IPopup } from \"../../allInterfaces\";\nimport greenBall from \"../../assets/image/me-green-ball.svg\";\nimport redBall from \"../../assets/image/me-red-ball.svg\";\nimport steps from \"../../assets/image/me-steps.svg\";\nimport happy from \"../../assets/image/me-emoji-happy.svg\";\nimport neutral from \"../../assets/image/me-emoji-neutral.svg\";\nimport sad from \"../../assets/image/me-emoji-sad.svg\";\n\nconst weightCounts = (n: number): string => `${n > 0 ? \"active\" : \"\"}`;\n\nexport const Popup: React.FC<{ data: IPopup }> = ({ data }) => {\n  const { getResaultOnDate } = useCurrentMonthYear();\n\n  const currentPosition: CSS.Properties = {\n    top: `${data.y}px`,\n    left: `${data.x}px`,\n  };\n\n  // * Get resaults on this day\n  const res: IResault = getResaultOnDate(data.curDay);\n  // * Choose emoji\n  const mood: IHealth = howGood(res.greenCounts, res.redCounts);\n  // * Upper last icon emoji\n  const styleEmoji: CSS.Properties = {\n    height: \"24px\",\n    width: \"24px\",\n    marginRight: \"6px\",\n  };\n\n  if (data.curDay.length < 10) return null;\n  return (\n    <div className=\"me-popup\" style={currentPosition}>\n      <div className=\"me-popup__line\">\n        <img src={greenBall} alt=\"o\" />\n        <span className={weightCounts(res.greenCounts)}>{res.greenCounts}</span>\n        natural foods eaten\n      </div>\n      <div className=\"me-popup__line\">\n        <img src={redBall} alt=\"o\" />\n        <span className={weightCounts(res.redCounts)}>{res.redCounts}</span>\n        non-natural foods eaten\n      </div>\n      <div className=\"me-popup__line\">\n        <img src={steps} alt=\"o\" />\n        <span className={weightCounts(res.stepCounts)}>{res.stepCounts}</span>\n        steps done\n      </div>\n      <div className=\"me-popup__line\">\n        <img\n          src={\n            mood.status === \"happy\"\n              ? happy\n              : mood.status === \"sad\"\n              ? sad\n              : neutral\n          }\n          alt=\"o\"\n          style={styleEmoji}\n        />\n        <span className={`${mood.status === \"choose\" ? \"\" : \"active\"}`}>\n          {mood.status}\n        </span>\n        mood\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Day } from \"../Day/Day\";\nimport \"./board.scss\";\nimport {\n  useCurrentMonthYear,\n  WeekDays,\n} from \"../../ContextCalendar/CalendarContext\";\nimport { Popup } from \"../Popup/Popup\";\nimport { IPopup } from \"../../allInterfaces\";\nimport { createBoardMonth } from \"../../logics/logics\";\n\nexport const Board: React.FC<{ toogleModal: (m: number) => void }> = ({\n  toogleModal,\n}) => {\n  const {\n    currentMonthYear: [curMonth, curYear],\n  } = useCurrentMonthYear();\n  const [currentData, setCurrentData] = React.useState<IPopup>({\n    curDay: \"\",\n    x: 0,\n    y: 0,\n  });\n  const [days, setDays] = React.useState<Date[]>([]);\n  React.useEffect(() => {\n    setDays(createBoardMonth(curMonth, curYear));\n    setCurrentData({ curDay: \"\", x: 0, y: 0 });\n  }, [curMonth, curYear]);\n  // * Change columns amount\n  const sizeBoard: string = `m-board ${days.length > 35 ? \"large\" : \"\"}`;\n\n  const getPopUp = (data: IPopup): void => {\n    if (data.curDay === currentData.curDay)\n      setCurrentData({ curDay: \"\", x: 0, y: 0 });\n    else setCurrentData(data);\n  };\n\n  return (\n    <div className={sizeBoard}>\n      {Object.keys(WeekDays)\n        .filter((x) => !(parseInt(x) >= 0))\n        .map((_, i) => (\n          <div className=\"m-board__weekdays\" key={i}>\n            {WeekDays[i]}\n          </div>\n        ))}\n      {days.map((day_, ind) => (\n        <Day\n          date={day_}\n          key={ind}\n          toogleModal={toogleModal}\n          popupDialog={getPopUp}\n        />\n      ))}\n      {currentData.curDay.length > 0 && <Popup data={currentData} />}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/me-plus.89ada8c2.svg\";","export default __webpack_public_path__ + \"static/media/me-minus.ef2bda19.svg\";","import React from \"react\";\nimport \"./counter.scss\";\nimport plus_ico from \"../../assets/image/me-plus.svg\";\nimport minus_ico from \"../../assets/image/me-minus.svg\";\n\ninterface ICounter {\n  value: number;\n  changeValue: (n: number) => void;\n  minValue?: number;\n  maxValue?: number;\n  increment?: number;\n  showIncrementIcon?: boolean;\n}\n\nconst setRightValue = (n: number, minV: number, maxV: number): number => {\n  if (Number.isNaN(Number(n))) return 0;\n  if (n >= minV && n <= maxV) return n;\n  else if (n < minV) return minV;\n  else return maxV;\n};\n\nexport const Counter: React.FC<ICounter> = ({\n  value = 0,\n  changeValue,\n  minValue = 0,\n  maxValue = 100,\n  increment = 1,\n  showIncrementIcon = true,\n}) => {\n  // ? Set value used keyboard\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    changeValue(setRightValue(Number(event.target.value), minValue, maxValue));\n  };\n  // ? Set value used button plus/minus\n  const changeCounter = (event: React.MouseEvent<HTMLImageElement>): void => {\n    changeValue(\n      setRightValue(\n        event.currentTarget.getAttribute(\"alt\") === \"-\"\n          ? value - increment\n          : value + increment,\n        minValue,\n        maxValue\n      )\n    );\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"m-counter\">\n      <div className=\"m-counter__wrapper\">\n        {showIncrementIcon && (\n          <img\n            src={minus_ico}\n            alt=\"-\"\n            onClick={(event) => changeCounter(event)}\n          />\n        )}\n        <input\n          className=\"m-counter__input\"\n          type=\"number\"\n          step={increment}\n          value={value}\n          onChange={(event) => handleInput(event)}\n        />\n        {showIncrementIcon && (\n          <img\n            src={plus_ico}\n            alt=\"+\"\n            onClick={(event) => changeCounter(event)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./statushealth.scss\";\nimport { IHealth } from \"../../allInterfaces\";\nimport happy from \"../../assets/image/me-emoji-happy.svg\";\nimport neutral from \"../../assets/image/me-emoji-neutral.svg\";\nimport sad from \"../../assets/image/me-emoji-sad.svg\";\n\nexport const StatusHealth: React.FC<IHealth> = ({ status = \"choose\" }) => {\n  return (\n    <div className=\"m-status\">\n      <div className={`m-status__line${status === \"happy\" ? \" active\" : \"\"}`}>\n        <img src={happy} alt=\"\" />\n      </div>\n      <div className={`m-status__line${status === \"neutral\" ? \" active\" : \"\"}`}>\n        <img src={neutral} alt=\"\" />\n      </div>\n      <div className={`m-status__line${status === \"sad\" ? \" active\" : \"\"}`}>\n        <img src={sad} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./editor.scss\";\nimport { howGood } from \"../../logics/logics\";\n\nimport {\n  useCurrentMonthYear,\n  IResault,\n} from \"../../ContextCalendar/CalendarContext\";\nimport { Counter } from \"../Counter/Counter\";\nimport { StatusHealth } from \"../StatusHealth/StatusHealth\";\n\nexport const Editor: React.FC<{ handleClose: () => void }> = ({\n  handleClose,\n}) => {\n  const {\n    selectedDate,\n    getResaultOnDate,\n    changeGlobalState,\n  } = useCurrentMonthYear();\n\n  const res: IResault = getResaultOnDate(selectedDate);\n  const [editResault, setEditResault] = React.useState<IResault>(res);\n\n  React.useEffect(() => {\n    setEditResault((prev) => ({ ...prev, ...res }));\n  }, [selectedDate]);\n\n  const setPartState = (partialData: {\n    [propName: string]: string | number;\n  }): void => setEditResault((prev) => ({ ...prev, ...partialData }));\n\n  const isActiveButClear: boolean =\n    res.greenCounts !== editResault.greenCounts ||\n    res.redCounts !== editResault.redCounts ||\n    res.stepCounts !== editResault.stepCounts\n      ? true\n      : false;\n  // ? Clear data in input\n  const handlerClear = (): void =>\n    setEditResault((prev: IResault) => ({\n      ...prev,\n      ...res,\n    }));\n\n  return (\n    <div className=\"m-editor\">\n      <button\n        onClick={handlerClear}\n        className=\"m-editor__clear-button\"\n        disabled={!isActiveButClear}\n      >\n        Clear all\n      </button>\n      <span></span>\n      <label>Date</label>\n      <div className=\"m-editor__date\">\n        <div className=\"m-editor__date-text\">\n          {`${selectedDate.slice(8, 10)}.${selectedDate.slice(\n            5,\n            7\n          )}.${selectedDate.slice(0, 4)}`}\n        </div>\n      </div>\n      <label>Green counts</label>\n      <Counter\n        value={editResault.greenCounts}\n        changeValue={(n: number) => setPartState({ greenCounts: n })}\n      />\n      <label>Red counts</label>\n      <Counter\n        value={editResault.redCounts}\n        changeValue={(n: number) => setPartState({ redCounts: n })}\n      />\n      <label>Steps counts</label>\n      <Counter\n        value={editResault.stepCounts}\n        changeValue={(n: number) => setPartState({ stepCounts: n })}\n        increment={10}\n        showIncrementIcon={false}\n        maxValue={30000}\n      />\n      <label>Your feelings</label>\n      <StatusHealth\n        status={howGood(editResault.greenCounts, editResault.redCounts).status}\n      />\n      <div className=\"m-editor__control\">\n        <button className=\"m-cancel _icon-close-small\" onClick={handleClose}>\n          Cancel\n        </button>\n        <button\n          className=\"m-save _icon-ok-small\"\n          disabled={!isActiveButClear}\n          onClick={() => {\n            changeGlobalState({ [selectedDate]: editResault }); handleClose();\n          }}\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/me-shot-arrow-left.6e35df5d.svg\";","export default __webpack_public_path__ + \"static/media/me-shot-arrow-right.56ce3577.svg\";","import React from \"react\";\nimport {\n  useCurrentMonthYear,\n  MonthNames,\n} from \"../../ContextCalendar/CalendarContext\";\nimport \"./months.scss\";\nimport arrowLeft from \"../../assets/image/me-shot-arrow-left.svg\";\nimport arrowRight from \"../../assets/image/me-shot-arrow-right.svg\";\n\nexport const Months: React.FC = () => {\n  const {\n    currentMonthYear,\n    changeMonthYear,\n  } = useCurrentMonthYear();\n\n  const changeMonth = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    let prevMonth: number = currentMonthYear[0],\n      prevYear: number = currentMonthYear[1];\n    if (ev.currentTarget.name === \"prev\") {\n      changeMonthYear(\n        prevMonth === 0 ? 10 : prevMonth - 1,\n        prevMonth === 0 ? prevYear - 1 : prevYear\n      );\n    } else {\n      changeMonthYear(\n        prevMonth === 10 ? 0 : prevMonth + 1,\n        prevMonth === 10 ? prevYear + 1 : prevYear\n      );\n    }\n  };\n\n  return (\n    <div className=\"m-month\">\n      <button className=\"m-month__next\" name=\"prev\" onClick={changeMonth}>\n        <img src={arrowLeft} alt=\"<\" />\n      </button>\n      <div className=\"m-month__name\">{`${MonthNames[currentMonthYear[0]]} ${\n        currentMonthYear[1]\n      }`}</div>\n      <button className=\"m-month__next\" name=\"next\" onClick={changeMonth}>\n        <img src={arrowRight} alt=\">\" />\n      </button>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/help.b5b60e18.svg\";","import React from \"react\";\nimport \"./headerbutton.scss\";\nimport greenstar from \"../../assets/image/star-green.svg\";\nimport goldstar from \"../../assets/image/star-gold.svg\";\nimport help from \"../../assets/image/help.svg\";\nimport { useCurrentMonthYear } from \"../../ContextCalendar/CalendarContext\";\n\nexport type TypeButton = \"greenstar\" | \"goldstar\" | \"help\" | \"text\" | \"\";\ninterface IButtonHeader {\n  typeButton: TypeButton;\n  text: string;\n  isDragable?: boolean;\n  onclick?: () => void;\n}\n\nexport const HeaderButton: React.FC<IButtonHeader> = ({\n  typeButton,\n  text = \"\",\n  isDragable = false,\n  onclick,\n}) => {\n  const { setDraggedStar } = useCurrentMonthYear();\n  const classes: string = `me-header-button ${typeButton}`;\n\n  const dragStarHandler = (): void => {\n    if (setDraggedStar) {\n      setDraggedStar(typeButton);\n    }\n  };\n\n  return (\n    <div className={classes} onClick={onclick}>\n      {typeButton !== \"text\" && (\n        <img\n          className={`${isDragable ? \"grabbable\" : \"\"}`}\n          src={\n            typeButton === \"greenstar\"\n              ? greenstar\n              : typeButton === \"goldstar\"\n              ? goldstar\n              : help\n          }\n          alt=\"\"\n          draggable={isDragable}\n          onDragStart={dragStarHandler}\n        />\n      )}\n      {text.length > 0 && <label>{text}</label>}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./header.scss\";\nimport { Months } from \"../Months/Months\";\nimport { HeaderButton } from \"../HeaderButton/HeaderButton\";\nimport { useCurrentMonthYear } from \"../../ContextCalendar/CalendarContext\";\nimport { isDraggableDay } from \"../../logics/logics\";\n\nexport const Header: React.FC<{ toogleModal: (m: number) => void }> = ({\n  toogleModal,\n}) => {\n  const { changeMonthYear, getStarOnMonth } = useCurrentMonthYear();\n  // * Set today\n  const setToday = (): void => {\n    changeMonthYear(new Date().getMonth(), new Date().getFullYear());\n    \n  };\n  //  * Show help modal\n  const showHelp = (): void => toogleModal(2);\n\n  return (\n    <div className=\"m-header\">\n      <Months />\n      <div className=\"m-wrapper\">\n        <HeaderButton\n          typeButton=\"greenstar\"\n          text={`${getStarOnMonth(\"amountGreenStar\")}`}\n          isDragable={isDraggableDay(new Date())}\n        />\n        <HeaderButton\n          typeButton=\"goldstar\"\n          text={`${getStarOnMonth(\"amountGoldStar\")}`}\n          isDragable={isDraggableDay(new Date())}\n        />\n        <HeaderButton typeButton=\"help\" text={\"\"} onclick={showHelp} />\n        <HeaderButton typeButton=\"text\" text={\"Today\"} onclick={setToday} />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/arrow.7341b856.svg\";","export default __webpack_public_path__ + \"static/media/arrow_shot.9ad6df22.svg\";","import React from \"react\";\nimport \"./help.scss\";\nimport greenBall from \"../../assets/image/me-green-ball.svg\";\nimport redBall from \"../../assets/image/me-red-ball.svg\";\nimport steps from \"../../assets/image/me-steps.svg\";\nimport greenstar from \"../../assets/image/star-green.svg\";\nimport goldstar from \"../../assets/image/star-gold.svg\";\nimport me_ok from \"../../assets/image/me-ok.svg\";\nimport ico_arrow from \"../../assets/image/arrow.svg\";\nimport arrow_shot from \"../../assets/image/arrow_shot.svg\";\n\nexport const Help: React.FC = () => {\n  return (\n    <div className=\"me-help\">\n      <div className=\"me-help__title\">Explanation</div>\n      <div className=\"me-help__section-title\">\n        How do I achieve a check mark?\n      </div>\n      <div className=\"me-help__section-images\">\n        <img src={greenBall} alt=\"\" />\n        <img src={arrow_shot} alt=\"\" className=\"small\" />\n        <span>2</span>\n        <img src={ico_arrow} alt=\"\" className=\"small\" />\n        <img src={me_ok} alt=\"\" />\n      </div>\n\n      <div className=\"me-help__section-text\">\n        Get 2 Green counts a day and earn green check mark\n      </div>\n      <div className=\"me-help__section-images\">\n        <img src={steps} alt=\"\" />\n        <img src={arrow_shot} alt=\"\" className=\"small\" />\n        <span>1000</span>\n        <img src={ico_arrow} alt=\"\" className=\"small\" />\n        <img src={me_ok} alt=\"\" />\n      </div>\n\n      <div className=\"me-help__section-text\">\n        Get 1000 steps and earn green check mark\n      </div>\n      <div className=\"me-help__section-images\">\n        <img src={redBall} alt=\"\" />\n        <img src={arrow_shot} alt=\"\" className=\"small\" />\n        <span>1</span>\n        <img src={ico_arrow} alt=\"\" className=\"small\" />\n        (\n        <img src={me_ok} alt=\"\" />)\n      </div>\n      <div className=\"me-help__section-text\">\n        Get 1 Red counts a day and lost green check mark\n      </div>\n\n      <div className=\"me-help__section-title\">How do I achive a star?</div>\n      <div className=\"me-help__section-images\">\n        <img src={me_ok} alt=\"\" />\n        <img src={me_ok} alt=\"\" />\n        <img src={me_ok} alt=\"\" />\n        <img src={ico_arrow} alt=\"\" className=\"small\" />\n        <img src={greenstar} alt=\"\" className=\"greenstar\" />\n      </div>\n      <div className=\"me-help__section-text\">\n        Get 3 green check marks a day - add a green star to your calendar\n      </div>\n\n      <div className=\"me-help__section-title\">How do I achive a gold star?</div>\n      <div className=\"me-help__section-images\">\n        <div>\n          <img src={greenstar} alt=\"\" className=\"greenstar\" />\n          <img src={greenstar} alt=\"\" className=\"greenstar\" />\n          <img src={greenstar} alt=\"\" className=\"greenstar\" />\n        </div>\n        <img src={ico_arrow} alt=\"\" className=\"small\" />\n        <img src={goldstar} alt=\"\" className={Object.keys({ goldstar })[0]} />\n      </div>\n      <div className=\"me-help__section-text\">\n        Get 3 green stars - add a gold star to your calendar\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./modal.scss\";\n\ninterface IModal {\n  handleClose: () => void;\n  isShow: boolean;\n  children: React.ReactNode;\n}\n\nexport const Modal: React.FC<IModal> = ({ handleClose, isShow, children }) => {\n  const toogleShow: string = isShow ? \"m-modal show\" : \"m-modal hide\";\n  return (\n    <div className={toogleShow}>\n      <section className=\"m-modal__main\">\n        {children}\n        <button onClick={handleClose}>&#10005;</button>\n      </section>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CalendarContextProvider } from \"../../ContextCalendar/CalendarContext\";\nimport { Board } from \"../Board/Board\";\nimport { Editor } from \"../Editor/Editor\";\nimport { Header } from \"../Header/Header\";\nimport { Help } from \"../Help/Help\";\nimport { Modal } from \"../Modal/Modal\";\nimport \"./calendar.scss\";\n\nexport const Calendar: React.FC = () => {\n  const [showModal, setShowModal] = React.useState<number>(0);\n  const hideModal = () => {\n    setShowModal(0);\n  };\n\n  return (\n    <div className=\"m-calendar\">\n      <div className=\"main-wrapper\">\n        <CalendarContextProvider>\n          <Header toogleModal={setShowModal} />\n          <Board toogleModal={setShowModal} />\n          <Modal\n            isShow={!!showModal}\n            handleClose={hideModal}\n            children={\n              showModal === 1 ? <Editor handleClose={hideModal} /> : <Help />\n            }\n          />\n        </CalendarContextProvider>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Calendar } from './components/Calendar/Calendar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar />\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}